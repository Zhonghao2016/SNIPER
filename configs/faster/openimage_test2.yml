---
MXNET_VERSION: "mxnet"
output_path: "./output/chips_open_resnet101_mx_bn"
proposal_path: "proposals"
symbol: resnet_mx_101_e2e_openimage
gpus: '0'
#gpus: '0'
CLASS_AGNOSTIC: true
startMSTR: 9
IS_DPN: false
SCALES:
- !!python/tuple [800,1280]
- !!python/tuple [800,1280]
- !!python/tuple [800,1280]
default:
  frequent: 100
  kvstore: device
network:
  deform: true
  pretrained: "./data/pretrained_model/CRCNN"
  pretrained_epoch: 1
  PIXEL_MEANS:
  - 103.939
  - 116.779
  - 123.68
  IMAGE_STRIDE: 0
  RCNN_FEAT_STRIDE: 16
  RPN_FEAT_STRIDE: 16
  FIXED_PARAMS:

  FIXED_PARAMS_SHARED:
  - conv0
  - bn0
  - stage1

  ANCHOR_RATIOS:
  - 0.5
  - 1
  - 2
  ANCHOR_SCALES:
  - 3
  - 6
  - 12
  - 24
  NUM_ANCHORS: 12
dataset:
  NUM_CLASSES: 602
  dataset: openimages
  dataset_path: "./data/openimage"
  image_set: train2014+val2014
  root_path: "./data"
  test_image_set: test_challenge_2018 # annotation file should be "image_info_test_challenge_2018.json"
  proposal: rpn
TRAIN:
  lr: 0.075 #0.002 #0.0005
  lr_step: '5,12'
  warmup: false
  fp16: true
  warmup_lr: 0.0005 #0.00005
  wd: 0.0001
  scale: 100.0
  warmup_step: 9000 #4000 #1000
  begin_epoch: 0
  end_epoch: 14 #9
  model_prefix: 'rcnn'
  # whether resume training
  RESUME: false
  # whether flip image
  FLIP: true
  # whether shuffle image
  SHUFFLE: true
  # whether use OHEM
  ENABLE_OHEM: true
  # size of images for each device, 2 for rcnn, 1 for rpn and e2e
  BATCH_IMAGES: 16
  # e2e changes behavior of anchor loader and metric
  END2END: true
  # group images with similar aspect ratio
  ASPECT_GROUPING: true
  # R-CNN
  # rcnn rois batch size
  BATCH_ROIS: -1
  BATCH_ROIS_OHEM: 256
  # rcnn rois sampling params
  FG_FRACTION: 0.25
  FG_THRESH: 0.5
  BG_THRESH_HI: 0.5
  BG_THRESH_LO: 0.0
  # rcnn bounding box regression params
  BBOX_REGRESSION_THRESH: 0.5
  BBOX_WEIGHTS:
  - 1.0
  - 1.0
  - 1.0
  - 1.0

  # RPN anchor loader
  # rpn anchors batch size
  RPN_BATCH_SIZE: 256
  # rpn anchors sampling params
  RPN_FG_FRACTION: 0.5
  RPN_POSITIVE_OVERLAP: 0.5
  RPN_NEGATIVE_OVERLAP: 0.4
  RPN_CLOBBER_POSITIVES: false
  # rpn bounding box regression params
  RPN_BBOX_WEIGHTS:
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  RPN_POSITIVE_WEIGHT: -1.0
  # used for end2end training
  # RPN proposal
  CXX_PROPOSAL: false
  RPN_NMS_THRESH: 0.7
  RPN_PRE_NMS_TOP_N: 6000
  RPN_POST_NMS_TOP_N: 300
  RPN_MIN_SIZE: 0
  # approximate bounding box regression
  BBOX_NORMALIZATION_PRECOMPUTED: true
  BBOX_MEANS:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  BBOX_STDS:
  - 0.1
  - 0.1
  - 0.2
  - 0.2
TEST:
  # use rpn to generate proposal
  HAS_RPN: true
  # size of images for each device
  #BATCH_IMAGES: 1
  # RPN proposal
  CXX_PROPOSAL: false
  RPN_NMS_THRESH: 0.7
  RPN_PRE_NMS_TOP_N: 6000
  RPN_POST_NMS_TOP_N: 300
  RPN_MIN_SIZE: 0
  # RPN generate proposal
  PROPOSAL_NMS_THRESH: 0.7
  PROPOSAL_PRE_NMS_TOP_N: 20000
  PROPOSAL_POST_NMS_TOP_N: 2000
  PROPOSAL_MIN_SIZE: 0
  # RCNN nms
  NMS: 0.45
  test_epoch: 0
  EXTRACT_PROPOSALS: false

  CONCURRENT_JOBS: 1
  TEST_EPOCH: 0
  SCALES:
  - !!python/tuple [1400, 2000]
  - !!python/tuple [800, 1280]
  - !!python/tuple [480, 512]
  BATCH_IMAGES:
  - 2
  - 2
  - 4
  MAX_PER_IMAGE: 200
  VALID_RANGES:
  - !!python/tuple [-1,-1]
  - !!python/tuple [-1,-1]
  - !!python/tuple [-1,-1]
  ISUALIZATION_PATH: './debug/visualization'
  VISUALIZE_INTERMEDIATE_SCALES: True
  PROPOSAL_SAVE_PATH: 'output/proposals'
  N_PROPOSAL_PER_SCALE: 300